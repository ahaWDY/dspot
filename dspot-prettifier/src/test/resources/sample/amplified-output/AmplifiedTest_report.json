{
  "testCases": [
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep20",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "hashCode": {
                  "lineCoverage": [
                    8,
                    9,
                    2
                  ],
                  "methodDescriptor": "()I"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "hashCode": {
                  "lineCoverage": [
                    8,
                    9,
                    2
                  ],
                  "methodDescriptor": "()I"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep23",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "isBlock": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "isBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "isBlock": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "isBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep24",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "hasText": {
                  "lineCoverage": [
                    11,
                    3,
                    0,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    0,
                    1,
                    2
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "hasText": {
                  "lineCoverage": [
                    11,
                    3,
                    0,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    0,
                    1,
                    2
                  ],
                  "methodDescriptor": "()Z"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep25",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "nextSibling": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    4,
                    5,
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "parentNode": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "childNode": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
                },
                "hasParent": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.select.Collector": {
              "methodCoverageMap": {
                "collect": {
                  "lineCoverage": [
                    4,
                    8,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/select/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;"
                }
              }
            },
            "org.jsoup.select.Collector$Accumulator": {
              "methodCoverageMap": {
                "head": {
                  "lineCoverage": [
                    3,
                    3,
                    7,
                    5,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "tail": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/select/Elements;Lorg/jsoup/select/Evaluator;)V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "getAllElements": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/select/Elements;"
                }
              }
            },
            "org.jsoup.select.Evaluator$AllElements": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()V"
                },
                "matches": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "getAllElements": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/select/Elements;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.select.Evaluator": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.select.Collector": {
              "methodCoverageMap": {
                "collect": {
                  "lineCoverage": [
                    4,
                    8,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/select/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;"
                }
              }
            },
            "org.jsoup.select.Collector$Accumulator": {
              "methodCoverageMap": {
                "head": {
                  "lineCoverage": [
                    3,
                    3,
                    7,
                    5,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "tail": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/select/Elements;Lorg/jsoup/select/Evaluator;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "nextSibling": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    4,
                    5,
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "parentNode": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "childNode": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "hasParent": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.select.Evaluator$AllElements": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()V"
                },
                "matches": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep27",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "padding": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "isInternalKey": {
                  "lineCoverage": [
                    13
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "html": {
                  "lineCoverage": [
                    3,
                    7,
                    7,
                    0,
                    0,
                    0,
                    5,
                    5,
                    6,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                }
              }
            },
            "org.jsoup.nodes.NodeUtils": {
              "methodCoverageMap": {
                "outputSettings": {
                  "lineCoverage": [
                    3,
                    6
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Document$OutputSettings;"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "indent": {
                  "lineCoverage": [
                    10,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "root": {
                  "lineCoverage": [
                    2,
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "nextSibling": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    4,
                    5,
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "parentNode": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "outerHtml": {
                  "lineCoverage": [
                    8,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;)V"
                },
                "ownerDocument": {
                  "lineCoverage": [
                    3,
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Document;"
                },
                "childNode": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
                },
                "hasParent": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.nodes.Node$OuterHtmlVisitor": {
              "methodCoverageMap": {
                "head": {
                  "lineCoverage": [
                    7,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "tail": {
                  "lineCoverage": [
                    5,
                    0,
                    7,
                    0,
                    0,
                    1,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "nodeName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "outerHtmlTail": {
                  "lineCoverage": [
                    8,
                    9,
                    2,
                    0,
                    5,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "outerHtmlHead": {
                  "lineCoverage": [
                    11,
                    3,
                    4,
                    6,
                    0,
                    0,
                    0,
                    0,
                    7,
                    8,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "root": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "isInlineable": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "isFormatAsBlock": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "outerHtml": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "formatAsBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "getName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "isInline": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "padding": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)Ljava/lang/String;"
                },
                "releaseBuilder": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    4,
                    0,
                    0,
                    6,
                    0,
                    4,
                    4,
                    0,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
                },
                "borrowBuilder": {
                  "lineCoverage": [
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/lang/StringBuilder;"
                },
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "isInternalKey": {
                  "lineCoverage": [
                    13
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "html": {
                  "lineCoverage": [
                    3,
                    7,
                    7,
                    0,
                    0,
                    0,
                    5,
                    5,
                    6,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Entities$CoreCharset": {
              "methodCoverageMap": {
                "byName": {
                  "lineCoverage": [
                    4,
                    0,
                    4,
                    2,
                    0
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$CoreCharset;"
                }
              }
            },
            "org.jsoup.nodes.NodeUtils": {
              "methodCoverageMap": {
                "outputSettings": {
                  "lineCoverage": [
                    3,
                    6
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Document$OutputSettings;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "prepareEncoder": {
                  "lineCoverage": [
                    4,
                    4,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "nodeName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "outerHtmlTail": {
                  "lineCoverage": [
                    8,
                    9,
                    2,
                    0,
                    5,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "isInlineable": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "isFormatAsBlock": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "outerHtmlHead": {
                  "lineCoverage": [
                    11,
                    3,
                    4,
                    6,
                    0,
                    0,
                    0,
                    0,
                    7,
                    8,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "root": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.nodes.Node$OuterHtmlVisitor": {
              "methodCoverageMap": {
                "head": {
                  "lineCoverage": [
                    7,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "tail": {
                  "lineCoverage": [
                    5,
                    0,
                    7,
                    0,
                    0,
                    1,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "formatAsBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "getName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "isInline": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "indent": {
                  "lineCoverage": [
                    10,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "nextSibling": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    4,
                    5,
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "parentNode": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "outerHtml": {
                  "lineCoverage": [
                    8,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;)V"
                },
                "childNode": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "root": {
                  "lineCoverage": [
                    2,
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "ownerDocument": {
                  "lineCoverage": [
                    3,
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Document;"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "hasParent": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "shouldCollapseAttribute": {
                  "lineCoverage": [
                    2,
                    5,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "outerHtml": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep28",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "isInternalKey": {
                  "lineCoverage": [
                    13
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "html": {
                  "lineCoverage": [
                    3,
                    7,
                    7,
                    0,
                    0,
                    0,
                    5,
                    5,
                    6,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "releaseBuilder": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    4,
                    0,
                    0,
                    6,
                    0,
                    4,
                    4,
                    0,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
                },
                "borrowBuilder": {
                  "lineCoverage": [
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/lang/StringBuilder;"
                },
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "isInternalKey": {
                  "lineCoverage": [
                    13
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "html": {
                  "lineCoverage": [
                    3,
                    7,
                    7,
                    0,
                    0,
                    0,
                    5,
                    5,
                    6,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "shouldCollapseAttribute": {
                  "lineCoverage": [
                    2,
                    5,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_assSep29",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "hashCode": {
                  "lineCoverage": [
                    3,
                    8,
                    8,
                    2
                  ],
                  "methodDescriptor": "()I"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "hashCode": {
                  "lineCoverage": [
                    3,
                    8,
                    8,
                    2
                  ],
                  "methodDescriptor": "()I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "inButtonScope": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "inSpecificScope": {
                  "lineCoverage": [
                    6,
                    5,
                    0,
                    0,
                    7,
                    7,
                    4,
                    0,
                    4,
                    2,
                    6,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "inScope": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "hasValue_assSep33",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "shouldCollapseAttribute": {
                  "lineCoverage": [
                    0,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "releaseBuilder": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    4,
                    0,
                    0,
                    6,
                    0,
                    4,
                    4,
                    0,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
                },
                "borrowBuilder": {
                  "lineCoverage": [
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/lang/StringBuilder;"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "checkNotNull": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                }
              }
            },
            "org.jsoup.nodes.Entities$CoreCharset": {
              "methodCoverageMap": {
                "byName": {
                  "lineCoverage": [
                    4,
                    0,
                    4,
                    2,
                    0
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$CoreCharset;"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "isBooleanAttribute": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "html": {
                  "lineCoverage": [
                    7,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "shouldCollapseAttribute": {
                  "lineCoverage": [
                    2,
                    7,
                    10
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "prepareEncoder": {
                  "lineCoverage": [
                    4,
                    4,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                },
                "encoder": {
                  "lineCoverage": [
                    5,
                    5
                  ],
                  "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.nodes.Entities": {
              "methodCoverageMap": {
                "canEncode": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Entities$CoreCharset;CLjava/nio/charset/CharsetEncoder;)Z"
                },
                "escape": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    0,
                    0,
                    11,
                    4,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    5,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "hasValue_assSep34",
      "nbAssertionAdded": 1,
      "nbInputAdded": 0,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "hashCode": {
                  "lineCoverage": [
                    8,
                    12,
                    2
                  ],
                  "methodDescriptor": "()I"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "hashCode": {
                  "lineCoverage": [
                    8,
                    12,
                    2
                  ],
                  "methodDescriptor": "()I"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_literalMutationString152_assSep332",
      "nbAssertionAdded": 1,
      "nbInputAdded": 1,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "inBodyStartTag": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -5,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "inSorted": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "hasDeclaredValue": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_literalMutationString152_assSep337",
      "nbAssertionAdded": 1,
      "nbInputAdded": 1,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "previousSibling": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "parent": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "isInlineable": {
                  "lineCoverage": [
                    1,
                    4,
                    7,
                    2,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "isEmpty": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "isInline": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "inBodyStartTag": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -5,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "padding": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)Ljava/lang/String;"
                },
                "releaseBuilder": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    4,
                    0,
                    0,
                    6,
                    0,
                    4,
                    4,
                    0,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
                },
                "borrowBuilder": {
                  "lineCoverage": [
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/lang/StringBuilder;"
                },
                "inSorted": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$34": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    2,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "iterator": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Ljava/util/Iterator;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "deduplicate": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    2,
                    9,
                    9,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "isInternalKey": {
                  "lineCoverage": [
                    13
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "normalize": {
                  "lineCoverage": [
                    8,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isEmpty": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "html": {
                  "lineCoverage": [
                    3,
                    7,
                    7,
                    0,
                    0,
                    0,
                    5,
                    5,
                    6,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Attributes$1": {
              "methodCoverageMap": {
                "next": {
                  "lineCoverage": [
                    18,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$35": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    4,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$10": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    4,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "emitTagPending": {
                  "lineCoverage": [
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                },
                "advanceTransition": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
                },
                "createTagPending": {
                  "lineCoverage": [
                    8,
                    3
                  ],
                  "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$8": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Entities$CoreCharset": {
              "methodCoverageMap": {
                "byName": {
                  "lineCoverage": [
                    4,
                    0,
                    4,
                    2,
                    0
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$CoreCharset;"
                }
              }
            },
            "org.jsoup.nodes.NodeUtils": {
              "methodCoverageMap": {
                "outputSettings": {
                  "lineCoverage": [
                    3,
                    6
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Document$OutputSettings;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "prepareEncoder": {
                  "lineCoverage": [
                    4,
                    4,
                    6,
                    2
                  ],
                  "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "nodeName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "parent": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "isBlock": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Z"
                },
                "outerHtmlTail": {
                  "lineCoverage": [
                    8,
                    9,
                    2,
                    0,
                    5,
                    9,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "isInlineable": {
                  "lineCoverage": [
                    6,
                    4,
                    7,
                    2,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "isFormatAsBlock": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "outerHtmlHead": {
                  "lineCoverage": [
                    11,
                    3,
                    4,
                    6,
                    0,
                    0,
                    0,
                    0,
                    7,
                    8,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "root": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "child": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.nodes.Node$OuterHtmlVisitor": {
              "methodCoverageMap": {
                "head": {
                  "lineCoverage": [
                    7,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "tail": {
                  "lineCoverage": [
                    5,
                    0,
                    7,
                    0,
                    0,
                    1,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "newAttribute": {
                  "lineCoverage": [
                    3,
                    5,
                    0,
                    3,
                    0,
                    5,
                    4,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    2,
                    0,
                    7,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "finaliseTag": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "preserveAttributeCase": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "formatAsBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "getName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "isBlock": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "isInline": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    9,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "indent": {
                  "lineCoverage": [
                    10,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
                },
                "nextSibling": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    4,
                    5,
                    4,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "parentNode": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "outerHtml": {
                  "lineCoverage": [
                    8,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Appendable;)V"
                },
                "childNode": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "root": {
                  "lineCoverage": [
                    2,
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "previousSibling": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
                },
                "toString": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "ownerDocument": {
                  "lineCoverage": [
                    3,
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Document;"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "hasParent": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Attribute": {
              "methodCoverageMap": {
                "shouldCollapseAttribute": {
                  "lineCoverage": [
                    2,
                    5,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    2,
                    3,
                    2,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeToAnySorted": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    6,
                    1,
                    2,
                    0,
                    3,
                    15
                  ],
                  "methodDescriptor": "([C)Ljava/lang/String;"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "isEmpty": {
                  "lineCoverage": [
                    2,
                    7
                  ],
                  "methodDescriptor": "()Z"
                },
                "consume": {
                  "lineCoverage": [
                    2,
                    9,
                    6,
                    2
                  ],
                  "methodDescriptor": "()C"
                },
                "consumeTagName": {
                  "lineCoverage": [
                    2,
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "unconsume": {
                  "lineCoverage": [
                    4,
                    0,
                    0,
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "matchesLetter": {
                  "lineCoverage": [
                    3,
                    0,
                    6,
                    15
                  ],
                  "methodDescriptor": "()Z"
                },
                "advance": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "outerHtml": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    4,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    5,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "inBodyStartTag": {
                  "lineCoverage": [
                    3,
                    3,
                    0,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    4,
                    0,
                    0,
                    0,
                    2,
                    4,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_literalMutationString138_failAssert0",
      "nbAssertionAdded": 1,
      "nbInputAdded": 1,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -3,
                    -3,
                    -4,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -4,
                    0,
                    -4,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "childElementsList": {
                  "lineCoverage": [
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "isStartTag": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isStartTag": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    6
                  ],
                  "methodDescriptor": "()C"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "booleanAttributesAreEmptyStringValues_literalMutationString145_failAssert0",
      "nbAssertionAdded": 1,
      "nbInputAdded": 1,
      "coverageImprovement": {
        "instructionImprovement": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "isBlank": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    5,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "isWhitespace": {
                  "lineCoverage": [
                    17
                  ],
                  "methodDescriptor": "(I)Z"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    -3,
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -3,
                    -3,
                    -4,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -4,
                    0,
                    -4,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.TextNode": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "consumeData": {
                  "lineCoverage": [
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    2,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asCharacter": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Character;"
                },
                "isStartTag": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCData": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.nodes.LeafNode": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -4,
                    0,
                    0,
                    0,
                    -5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "data": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "getData": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "framesetOk": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "isContentForTagData": {
                  "lineCoverage": [
                    10
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "insert": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    3,
                    3,
                    0,
                    3,
                    0,
                    4,
                    0,
                    0,
                    5,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token$Character;)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    0,
                    0,
                    3,
                    5,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    2,
                    3,
                    3,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    -5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      },
      "fullCoverage": {
        "instructionsProjectCoverageMap": {
          "classCoverageMaps": {
            "org.jsoup.internal.StringUtil": {
              "methodCoverageMap": {
                "isBlank": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    5,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "isWhitespace": {
                  "lineCoverage": [
                    17
                  ],
                  "methodDescriptor": "(I)Z"
                }
              }
            },
            "org.jsoup.nodes.Attributes": {
              "methodCoverageMap": {
                "add": {
                  "lineCoverage": [
                    6,
                    6,
                    6,
                    6,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
                },
                "checkCapacity": {
                  "lineCoverage": [
                    7,
                    4,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "(I)V"
                },
                "indexOfKey": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)I"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.TokeniserState$1": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    1,
                    0,
                    3,
                    3,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
                }
              }
            },
            "org.jsoup.helper.ChangeNotifyingArrayList": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                }
              }
            },
            "org.jsoup.nodes.TextNode": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.TreeBuilder": {
              "methodCoverageMap": {
                "initialiseParse": {
                  "lineCoverage": [
                    3,
                    3,
                    2,
                    0,
                    6,
                    5,
                    3,
                    4,
                    6,
                    3,
                    9,
                    6,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "processEndTag": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    8
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "runParser": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    0,
                    3,
                    4,
                    3,
                    0,
                    4,
                    1,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "parse": {
                  "lineCoverage": [
                    5,
                    2,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    6
                  ],
                  "methodDescriptor": "()V"
                },
                "currentElement": {
                  "lineCoverage": [
                    4,
                    11
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$StartTag": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Token$EOF": {
              "methodCoverageMap": {
                "reset": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tokeniser": {
              "methodCoverageMap": {
                "read": {
                  "lineCoverage": [
                    3,
                    7,
                    0,
                    0,
                    0,
                    3,
                    3,
                    0,
                    0,
                    0,
                    0,
                    3,
                    6,
                    3,
                    2,
                    0,
                    3,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    3,
                    6,
                    6,
                    0,
                    0,
                    5,
                    5,
                    5,
                    5,
                    5,
                    0,
                    0,
                    2,
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
                }
              }
            },
            "org.jsoup.parser.ParseErrorList": {
              "methodCoverageMap": {
                "noTracking": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.LeafNode": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Parser": {
              "methodCoverageMap": {
                "settings": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                },
                "htmlParser": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
                },
                "parse": {
                  "lineCoverage": [
                    4,
                    12
                  ],
                  "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
                },
                "getErrors": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
                }
              }
            },
            "org.jsoup.nodes.Document$OutputSettings": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    0,
                    3
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Element": {
              "methodCoverageMap": {
                "ensureChildNodes": {
                  "lineCoverage": [
                    4,
                    7,
                    0,
                    3
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "appendChild": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    3,
                    3,
                    5,
                    7,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
                },
                "normalName": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "attributes": {
                  "lineCoverage": [
                    3,
                    5,
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
                },
                "childNodeSize": {
                  "lineCoverage": [
                    4
                  ],
                  "methodDescriptor": "()I"
                },
                "childElementsList": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    3,
                    4,
                    5,
                    0,
                    7,
                    6,
                    3,
                    5,
                    0,
                    6,
                    0,
                    2
                  ],
                  "methodDescriptor": "()Ljava/util/List;"
                },
                "tag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "doSetBaseUri": {
                  "lineCoverage": [
                    6,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.internal.Normalizer": {
              "methodCoverageMap": {
                "lowerCase": {
                  "lineCoverage": [
                    7
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.helper.Validate": {
              "methodCoverageMap": {
                "notNull": {
                  "lineCoverage": [
                    2,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
                }
              }
            },
            "org.jsoup.parser.Token": {
              "methodCoverageMap": {
                "asStartTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
                },
                "isComment": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "asCharacter": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Character;"
                },
                "isStartTag": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCharacter": {
                  "lineCoverage": [
                    8
                  ],
                  "methodDescriptor": "()Z"
                },
                "asEndTag": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
                },
                "reset": {
                  "lineCoverage": [
                    2,
                    6,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
                },
                "isEndTag": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isDoctype": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Z"
                },
                "isCData": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "hasAttributes": {
                  "lineCoverage": [
                    5
                  ],
                  "methodDescriptor": "()Z"
                },
                "name": {
                  "lineCoverage": [
                    3,
                    4,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    3,
                    3,
                    4
                  ],
                  "methodDescriptor": "()V"
                },
                "isSelfClosing": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.ParseSettings": {
              "methodCoverageMap": {
                "normalizeTag": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
                },
                "normalizeAttributes": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
                }
              }
            },
            "org.jsoup.parser.Token$Doctype": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    3,
                    5,
                    5,
                    3,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.Tag": {
              "methodCoverageMap": {
                "normalName": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    0,
                    2,
                    3,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "isFormListed": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                }
              }
            },
            "org.jsoup.parser.Token$Character": {
              "methodCoverageMap": {
                "data": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;"
                },
                "reset": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/Token;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "getData": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$2": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.nodes.Node": {
              "methodCoverageMap": {
                "setParentNode": {
                  "lineCoverage": [
                    2,
                    3,
                    0,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "setBaseUri": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "setSiblingIndex": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(I)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "reparentChild": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "nodelistChanged": {
                  "lineCoverage": [
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$1": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    4,
                    0,
                    0
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$4": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$3": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    9,
                    0,
                    9,
                    5,
                    3,
                    3,
                    4,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.Token$EndTag": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.CharacterReader": {
              "methodCoverageMap": {
                "isEmptyNoBufferUp": {
                  "lineCoverage": [
                    9
                  ],
                  "methodDescriptor": "()Z"
                },
                "current": {
                  "lineCoverage": [
                    2,
                    11
                  ],
                  "methodDescriptor": "()C"
                },
                "cacheString": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    4,
                    2,
                    7,
                    9,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    2,
                    7,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
                },
                "consumeData": {
                  "lineCoverage": [
                    3,
                    2,
                    3,
                    3,
                    0,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    3,
                    14
                  ],
                  "methodDescriptor": "()Ljava/lang/String;"
                },
                "bufferUp": {
                  "lineCoverage": [
                    8,
                    1,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    3,
                    2,
                    0,
                    0,
                    0,
                    6,
                    4,
                    2,
                    3,
                    12,
                    3,
                    3,
                    2,
                    1,
                    4,
                    1,
                    3,
                    2,
                    8,
                    3,
                    6,
                    3,
                    4,
                    0,
                    6,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "close": {
                  "lineCoverage": [
                    3,
                    0,
                    0,
                    3,
                    0,
                    0,
                    3,
                    3,
                    3,
                    0,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.nodes.Document": {
              "methodCoverageMap": {
                "parser": {
                  "lineCoverage": [
                    3,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    6,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)V"
                },
                "body": {
                  "lineCoverage": [
                    3,
                    11,
                    10,
                    2,
                    1,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "htmlEl": {
                  "lineCoverage": [
                    11,
                    5,
                    2,
                    0,
                    0
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                }
              }
            },
            "org.jsoup.parser.Token$Comment": {
              "methodCoverageMap": {
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    5,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$6": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    3,
                    0,
                    3,
                    0,
                    3,
                    0,
                    3,
                    3,
                    3,
                    4,
                    0,
                    4,
                    4,
                    3,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                },
                "anythingElse": {
                  "lineCoverage": [
                    4,
                    3,
                    4
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilder": {
              "methodCoverageMap": {
                "reconstructFormattingElements": {
                  "lineCoverage": [
                    3,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "methodDescriptor": "()V"
                },
                "initialiseParse": {
                  "lineCoverage": [
                    5,
                    0,
                    0,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    5,
                    5,
                    5,
                    3,
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
                },
                "framesetOk": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "setHeadElement": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
                },
                "insertNode": {
                  "lineCoverage": [
                    4,
                    6,
                    3,
                    0,
                    0,
                    5,
                    0,
                    0,
                    8,
                    0,
                    0,
                    0,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
                },
                "insertStartTag": {
                  "lineCoverage": [
                    9,
                    3,
                    2
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
                },
                "insert": {
                  "lineCoverage": [
                    3,
                    2,
                    0,
                    3,
                    3,
                    0,
                    3,
                    0,
                    4,
                    0,
                    0,
                    5,
                    4,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token$Character;)V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    9
                  ],
                  "methodDescriptor": "()V"
                },
                "transition": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
                },
                "pop": {
                  "lineCoverage": [
                    4,
                    8
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "lastFormattingElement": {
                  "lineCoverage": [
                    6
                  ],
                  "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
                },
                "isContentForTagData": {
                  "lineCoverage": [
                    10
                  ],
                  "methodDescriptor": "(Ljava/lang/String;)Z"
                },
                "isFosterInserts": {
                  "lineCoverage": [
                    3
                  ],
                  "methodDescriptor": "()Z"
                },
                "defaultSettings": {
                  "lineCoverage": [
                    2
                  ],
                  "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
                }
              }
            },
            "org.jsoup.nodes.Element$NodeList": {
              "methodCoverageMap": {
                "onContentsChanged": {
                  "lineCoverage": [
                    3,
                    1
                  ],
                  "methodDescriptor": "()V"
                },
                "\u003cinit\u003e": {
                  "lineCoverage": [
                    3,
                    3,
                    1
                  ],
                  "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
                }
              }
            },
            "org.jsoup.parser.HtmlTreeBuilderState$7": {
              "methodCoverageMap": {
                "process": {
                  "lineCoverage": [
                    6,
                    0,
                    3,
                    5,
                    0,
                    0,
                    0,
                    6,
                    0,
                    0,
                    0,
                    2,
                    3,
                    3,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2
                  ],
                  "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
                }
              }
            }
          }
        }
      }
    }
  ],
  "initialCoverage": {
    "instructionsProjectCoverageMap": {
      "classCoverageMaps": {
        "org.jsoup.parser.TokeniserState$56": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$57": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$18": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$58": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$19": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$59": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$16": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.helper.ChangeNotifyingArrayList": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$52": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$17": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$53": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$14": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$54": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TreeBuilder": {
          "methodCoverageMap": {
            "initialiseParse": {
              "lineCoverage": [
                3,
                3,
                2,
                0,
                6,
                5,
                3,
                4,
                6,
                3,
                9,
                6,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
            },
            "processEndTag": {
              "lineCoverage": [
                5,
                0,
                0,
                8
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "runParser": {
              "lineCoverage": [
                3,
                2,
                0,
                0,
                3,
                4,
                3,
                0,
                4,
                1,
                1,
                1
              ],
              "methodDescriptor": "()V"
            },
            "parse": {
              "lineCoverage": [
                5,
                2,
                0,
                0,
                3,
                3,
                3,
                3,
                0,
                3
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                6
              ],
              "methodDescriptor": "()V"
            },
            "currentElement": {
              "lineCoverage": [
                4,
                11
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$15": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$55": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$50": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$51": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Parser": {
          "methodCoverageMap": {
            "settings": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
            },
            "htmlParser": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
            },
            "parse": {
              "lineCoverage": [
                4,
                12
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
            },
            "getErrors": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
            }
          }
        },
        "org.jsoup.nodes.Entities$CoreCharset": {
          "methodCoverageMap": {
            "byName": {
              "lineCoverage": [
                4,
                0,
                4,
                2,
                0
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$CoreCharset;"
            }
          }
        },
        "org.jsoup.nodes.Element": {
          "methodCoverageMap": {
            "nodeName": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "ensureChildNodes": {
              "lineCoverage": [
                4,
                7,
                0,
                3
              ],
              "methodDescriptor": "()Ljava/util/List;"
            },
            "appendChild": {
              "lineCoverage": [
                2,
                0,
                0,
                3,
                3,
                5,
                7,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
            },
            "isBlock": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Z"
            },
            "outerHtmlTail": {
              "lineCoverage": [
                8,
                9,
                2,
                0,
                5,
                9,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "childElementsList": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                3,
                4,
                5,
                0,
                7,
                6,
                3,
                5,
                0,
                6,
                0,
                2
              ],
              "methodDescriptor": "()Ljava/util/List;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
            },
            "isInlineable": {
              "lineCoverage": [
                5,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "hasText": {
              "lineCoverage": [
                11,
                3,
                0,
                0,
                0,
                3,
                3,
                3,
                0,
                0,
                1,
                2
              ],
              "methodDescriptor": "()Z"
            },
            "isFormatAsBlock": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "nodelistChanged": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "doSetBaseUri": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "getAllElements": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/select/Elements;"
            },
            "outerHtmlHead": {
              "lineCoverage": [
                11,
                3,
                4,
                6,
                0,
                0,
                0,
                0,
                7,
                8,
                0,
                0,
                8,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "normalName": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "root": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "attributes": {
              "lineCoverage": [
                3,
                5,
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
            },
            "childNodeSize": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()I"
            },
            "tag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
            },
            "child": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$12": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$13": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$10": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$11": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$67": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$63": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Node$OuterHtmlVisitor": {
          "methodCoverageMap": {
            "head": {
              "lineCoverage": [
                7,
                0,
                0,
                1,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "tail": {
              "lineCoverage": [
                5,
                0,
                7,
                0,
                0,
                1,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$64": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$65": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$66": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Token": {
          "methodCoverageMap": {
            "asStartTag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
            },
            "isComment": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "isStartTag": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "isCharacter": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "asEndTag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
            },
            "reset": {
              "lineCoverage": [
                2,
                6,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
            },
            "isEndTag": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "isDoctype": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$60": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$61": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$62": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Tag": {
          "methodCoverageMap": {
            "formatAsBlock": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "getName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "isBlock": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "normalName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "isInline": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "()Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                0,
                2,
                3,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "isFormListed": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "isSelfClosing": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "()Z"
            },
            "register": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tag;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Character": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Token$EndTag": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.nodes.Document": {
          "methodCoverageMap": {
            "parser": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                6,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "body": {
              "lineCoverage": [
                3,
                11,
                10,
                2,
                1,
                0
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "outerHtml": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "htmlEl": {
              "lineCoverage": [
                11,
                5,
                2,
                0,
                0
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.nodes.Entities": {
          "methodCoverageMap": {
            "load": {
              "lineCoverage": [
                5,
                5,
                5,
                5,
                0,
                2,
                5,
                0,
                3,
                0,
                0,
                4,
                2,
                6,
                3,
                2,
                0,
                3,
                6,
                3,
                0,
                2,
                0,
                4,
                4,
                2,
                0,
                5,
                5,
                5,
                5,
                0,
                3,
                19,
                0,
                1,
                1,
                0,
                7,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Entities$EscapeMode;Ljava/lang/String;I)V"
            },
            "canEncode": {
              "lineCoverage": [
                5,
                0,
                0,
                0,
                2,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Entities$CoreCharset;CLjava/nio/charset/CharsetEncoder;)Z"
            },
            "escape": {
              "lineCoverage": [
                2,
                2,
                3,
                3,
                3,
                3,
                0,
                0,
                11,
                4,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                0,
                2,
                0,
                4,
                1,
                0,
                3,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                5,
                0,
                0,
                0,
                1,
                6,
                4,
                5,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilder": {
          "methodCoverageMap": {
            "inButtonScope": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "pop": {
              "lineCoverage": [
                4,
                8
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "initialiseParse": {
              "lineCoverage": [
                5,
                0,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                5,
                5,
                5,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
            },
            "setHeadElement": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
            },
            "insertNode": {
              "lineCoverage": [
                4,
                6,
                3,
                0,
                0,
                5,
                0,
                0,
                8,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "insertStartTag": {
              "lineCoverage": [
                9,
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
            },
            "inSpecificScope": {
              "lineCoverage": [
                6,
                5,
                0,
                0,
                7,
                7,
                4,
                0,
                4,
                2,
                6,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                9
              ],
              "methodDescriptor": "()V"
            },
            "inScope": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
            },
            "isFosterInserts": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "transition": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
            },
            "defaultSettings": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
            }
          }
        },
        "org.jsoup.select.Evaluator$AllElements": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            },
            "matches": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z"
            }
          }
        },
        "org.jsoup.parser.ParseErrorList": {
          "methodCoverageMap": {
            "noTracking": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
            }
          }
        },
        "org.jsoup.select.Collector": {
          "methodCoverageMap": {
            "collect": {
              "lineCoverage": [
                4,
                8,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/select/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;"
            }
          }
        },
        "org.jsoup.select.Collector$Accumulator": {
          "methodCoverageMap": {
            "head": {
              "lineCoverage": [
                3,
                3,
                7,
                5,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "tail": {
              "lineCoverage": [
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/select/Elements;Lorg/jsoup/select/Evaluator;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Tag": {
          "methodCoverageMap": {
            "newAttribute": {
              "lineCoverage": [
                3,
                5,
                0,
                3,
                0,
                5,
                4,
                0,
                3,
                0,
                3,
                0,
                0,
                2,
                0,
                7,
                0,
                0,
                3,
                3,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "normalName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "hasAttributes": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "name": {
              "lineCoverage": [
                3,
                4,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
            },
            "reset": {
              "lineCoverage": [
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                5,
                0,
                3,
                3,
                4
              ],
              "methodDescriptor": "()V"
            },
            "finaliseTag": {
              "lineCoverage": [
                3,
                2,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "isSelfClosing": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.Token$Doctype": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                3,
                5,
                5,
                3,
                0,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.CharacterReader": {
          "methodCoverageMap": {
            "isEmptyNoBufferUp": {
              "lineCoverage": [
                9
              ],
              "methodDescriptor": "()Z"
            },
            "consumeToAnySorted": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                0,
                3,
                6,
                1,
                2,
                0,
                3,
                15
              ],
              "methodDescriptor": "([C)Ljava/lang/String;"
            },
            "isEmpty": {
              "lineCoverage": [
                2,
                9
              ],
              "methodDescriptor": "()Z"
            },
            "consume": {
              "lineCoverage": [
                2,
                9,
                6,
                2
              ],
              "methodDescriptor": "()C"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                8,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "advance": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "()V"
            },
            "current": {
              "lineCoverage": [
                2,
                11
              ],
              "methodDescriptor": "()C"
            },
            "consumeToAny": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                3,
                0,
                0,
                3,
                7,
                7,
                1,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "([C)Ljava/lang/String;"
            },
            "cacheString": {
              "lineCoverage": [
                3,
                7,
                3,
                0,
                0,
                0,
                4,
                2,
                7,
                9,
                0,
                0,
                0,
                4,
                4,
                0,
                2,
                7,
                5,
                0,
                6,
                2,
                0,
                7,
                4,
                0,
                0,
                2
              ],
              "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
            },
            "consumeTagName": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                0,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "bufferUp": {
              "lineCoverage": [
                8,
                1,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                3,
                2,
                0,
                0,
                0,
                6,
                4,
                2,
                3,
                12,
                3,
                3,
                2,
                1,
                4,
                1,
                3,
                2,
                8,
                3,
                6,
                3,
                4,
                0,
                6,
                0,
                0,
                0,
                1,
                1
              ],
              "methodDescriptor": "()V"
            },
            "close": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                0,
                3,
                3,
                3,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "unconsume": {
              "lineCoverage": [
                4,
                0,
                0,
                6,
                1
              ],
              "methodDescriptor": "()V"
            },
            "matchesLetter": {
              "lineCoverage": [
                3,
                0,
                6,
                15
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$23": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.select.Evaluator$Tag": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$21": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$22": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$20": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.StringUtil": {
          "methodCoverageMap": {
            "padding": {
              "lineCoverage": [
                2,
                0,
                0,
                4,
                4,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "(I)Ljava/lang/String;"
            },
            "releaseBuilder": {
              "lineCoverage": [
                2,
                3,
                0,
                4,
                0,
                0,
                6,
                0,
                4,
                4,
                0,
                4,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
            },
            "borrowBuilder": {
              "lineCoverage": [
                4,
                10,
                0,
                2
              ],
              "methodDescriptor": "()Ljava/lang/StringBuilder;"
            },
            "inSorted": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$12": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$2": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$13": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attributes$1": {
          "methodCoverageMap": {
            "next": {
              "lineCoverage": [
                18,
                6,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$1": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                0,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                5,
                1,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$14": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$15": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$10": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                4,
                0,
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Token$StartTag": {
          "methodCoverageMap": {
            "reset": {
              "lineCoverage": [
                3,
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Token$EOF": {
          "methodCoverageMap": {
            "reset": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Tokeniser": {
          "methodCoverageMap": {
            "emitTagPending": {
              "lineCoverage": [
                3,
                4,
                1
              ],
              "methodDescriptor": "()V"
            },
            "read": {
              "lineCoverage": [
                3,
                7,
                0,
                0,
                0,
                3,
                3,
                0,
                0,
                0,
                0,
                3,
                0,
                0,
                0,
                0,
                3,
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                0,
                3,
                3,
                6,
                6,
                0,
                0,
                5,
                5,
                5,
                5,
                5,
                0,
                0,
                2,
                3,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
            },
            "advanceTransition": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
            },
            "transition": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
            },
            "createTagPending": {
              "lineCoverage": [
                8,
                3
              ],
              "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$11": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$9": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$8": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$7": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$6": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$5": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$4": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$3": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.NodeUtils": {
          "methodCoverageMap": {
            "outputSettings": {
              "lineCoverage": [
                3,
                6
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Document$OutputSettings;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$16": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$17": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$18": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$19": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$23": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$24": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$25": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$26": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$20": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$21": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$22": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.ParseSettings": {
          "methodCoverageMap": {
            "normalizeTag": {
              "lineCoverage": [
                3,
                3,
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "preserveAttributeCase": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "normalizeAttributes": {
              "lineCoverage": [
                5,
                2,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
            }
          }
        },
        "org.jsoup.nodes.Node": {
          "methodCoverageMap": {
            "setParentNode": {
              "lineCoverage": [
                2,
                3,
                0,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "setSiblingIndex": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(I)V"
            },
            "indent": {
              "lineCoverage": [
                10,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "nextSibling": {
              "lineCoverage": [
                3,
                2,
                0,
                4,
                5,
                4,
                5,
                0,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "parentNode": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                1
              ],
              "methodDescriptor": "()V"
            },
            "outerHtml": {
              "lineCoverage": [
                8,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;)V"
            },
            "childNode": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
            },
            "nodelistChanged": {
              "lineCoverage": [
                1
              ],
              "methodDescriptor": "()V"
            },
            "setBaseUri": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "root": {
              "lineCoverage": [
                2,
                3,
                4,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "ownerDocument": {
              "lineCoverage": [
                3,
                7
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Document;"
            },
            "reparentChild": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "hasParent": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$27": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$28": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$29": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$34": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                2,
                3,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attributes": {
          "methodCoverageMap": {
            "add": {
              "lineCoverage": [
                6,
                6,
                6,
                6,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
            },
            "checkCapacity": {
              "lineCoverage": [
                7,
                4,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "(I)V"
            },
            "deduplicate": {
              "lineCoverage": [
                3,
                0,
                3,
                2,
                9,
                9,
                5,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
            },
            "isEmpty": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "()Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                5
              ],
              "methodDescriptor": "()V"
            },
            "iterator": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "()Ljava/util/Iterator;"
            },
            "checkNotNull": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "hashCode": {
              "lineCoverage": [
                3,
                8,
                8,
                2
              ],
              "methodDescriptor": "()I"
            },
            "indexOfKey": {
              "lineCoverage": [
                2,
                6,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)I"
            },
            "isInternalKey": {
              "lineCoverage": [
                13
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "normalize": {
              "lineCoverage": [
                8,
                9,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "html": {
              "lineCoverage": [
                3,
                7,
                7,
                0,
                0,
                0,
                5,
                5,
                6,
                0,
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "internalKey": {
              "lineCoverage": [
                9
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$35": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                4,
                4,
                0,
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$36": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$37": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$30": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$31": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$32": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$33": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Entities$EscapeMode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                4,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;ILjava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Document$OutputSettings": {
          "methodCoverageMap": {
            "prepareEncoder": {
              "lineCoverage": [
                4,
                4,
                6,
                2
              ],
              "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                5,
                0,
                0,
                3,
                3,
                3,
                3,
                0,
                3
              ],
              "methodDescriptor": "()V"
            },
            "encoder": {
              "lineCoverage": [
                5,
                5
              ],
              "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
            }
          }
        },
        "org.jsoup.select.Evaluator": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$38": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$39": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.Normalizer": {
          "methodCoverageMap": {
            "lowerCase": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$45": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$46": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.StringUtil$1": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            },
            "initialValue": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/util/Stack;"
            }
          }
        },
        "org.jsoup.helper.Validate": {
          "methodCoverageMap": {
            "isTrue": {
              "lineCoverage": [
                2,
                0,
                1
              ],
              "methodDescriptor": "(ZLjava/lang/String;)V"
            },
            "notNull": {
              "lineCoverage": [
                2,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$47": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$48": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$41": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$42": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$43": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$44": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$40": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$2": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                3,
                0,
                9,
                0,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                5,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                3,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$1": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$4": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                6,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                4,
                0,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                4,
                0,
                4,
                0,
                4,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                5,
                0,
                0,
                0,
                3,
                3,
                4,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$3": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                0,
                9,
                0,
                9,
                5,
                3,
                3,
                4,
                0,
                0,
                3,
                0,
                0,
                0,
                4,
                4,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attribute": {
          "methodCoverageMap": {
            "getKey": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "getValue": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "hasDeclaredValue": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "isBooleanAttribute": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "hashCode": {
              "lineCoverage": [
                8,
                13,
                2
              ],
              "methodDescriptor": "()I"
            },
            "setValue": {
              "lineCoverage": [
                3,
                3,
                0,
                0,
                0,
                0,
                0,
                3,
                3
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "html": {
              "lineCoverage": [
                7,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "shouldCollapseAttribute": {
              "lineCoverage": [
                2,
                7,
                12
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                2,
                3,
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
            },
            "setKey": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                0,
                0,
                0,
                0,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Comment": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$9": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$6": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                3,
                3,
                3,
                4,
                0,
                4,
                4,
                3,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                5,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                3,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$49": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$5": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$8": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Element$NodeList": {
          "methodCoverageMap": {
            "onContentsChanged": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$7": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                6,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "inBodyStartTag": {
              "lineCoverage": [
                3,
                3,
                0,
                0,
                0,
                8,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        }
      }
    }
  },
  "amplifiedCoverage": {
    "instructionImprovement": {
      "classCoverageMaps": {
        "org.jsoup.internal.StringUtil": {
          "methodCoverageMap": {
            "isBlank": {
              "lineCoverage": [
                5,
                0,
                0,
                3,
                5,
                5,
                2,
                0,
                0
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "isWhitespace": {
              "lineCoverage": [
                17
              ],
              "methodDescriptor": "(I)Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$1": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                0,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            }
          }
        },
        "org.jsoup.nodes.TextNode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.Token": {
          "methodCoverageMap": {
            "asCharacter": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Character;"
            },
            "isStartTag": {
              "lineCoverage": [
                1
              ],
              "methodDescriptor": "()Z"
            },
            "isCharacter": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Z"
            },
            "isCData": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.Tokeniser": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                6,
                3,
                2,
                0,
                0,
                0
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            }
          }
        },
        "org.jsoup.nodes.LeafNode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Tag": {
          "methodCoverageMap": {
            "isEmpty": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "isInline": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.Token$Character": {
          "methodCoverageMap": {
            "data": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;"
            },
            "reset": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "getData": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.nodes.Node": {
          "methodCoverageMap": {
            "previousSibling": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                0,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$4": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.CharacterReader": {
          "methodCoverageMap": {
            "consumeData": {
              "lineCoverage": [
                3,
                2,
                3,
                3,
                0,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.nodes.Element": {
          "methodCoverageMap": {
            "parent": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "childElementsList": {
              "lineCoverage": [
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "()Ljava/util/List;"
            },
            "isInlineable": {
              "lineCoverage": [
                1,
                4,
                7,
                2,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$6": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilder": {
          "methodCoverageMap": {
            "reconstructFormattingElements": {
              "lineCoverage": [
                3,
                2,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "()V"
            },
            "framesetOk": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "lastFormattingElement": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "isContentForTagData": {
              "lineCoverage": [
                10
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "insert": {
              "lineCoverage": [
                3,
                2,
                0,
                3,
                3,
                0,
                3,
                0,
                4,
                0,
                0,
                5,
                4,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token$Character;)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$7": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                0,
                0,
                3,
                5,
                0,
                0,
                0,
                6,
                0,
                0,
                0,
                2,
                3,
                3,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "inBodyStartTag": {
              "lineCoverage": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                4,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                4,
                0,
                0,
                0,
                2,
                4,
                0,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        }
      }
    }
  },
  "fullCoverageAfterAmplification": {
    "instructionsProjectCoverageMap": {
      "classCoverageMaps": {
        "org.jsoup.parser.TokeniserState$56": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$57": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$18": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$58": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$19": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$59": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$16": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.helper.ChangeNotifyingArrayList": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$52": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$17": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$53": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$14": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$54": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TreeBuilder": {
          "methodCoverageMap": {
            "initialiseParse": {
              "lineCoverage": [
                3,
                3,
                2,
                0,
                6,
                5,
                3,
                4,
                6,
                3,
                9,
                6,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
            },
            "processEndTag": {
              "lineCoverage": [
                5,
                0,
                0,
                8
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "runParser": {
              "lineCoverage": [
                3,
                2,
                0,
                0,
                3,
                4,
                3,
                0,
                4,
                1,
                1,
                1
              ],
              "methodDescriptor": "()V"
            },
            "parse": {
              "lineCoverage": [
                5,
                2,
                0,
                0,
                3,
                3,
                3,
                3,
                0,
                3
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                6
              ],
              "methodDescriptor": "()V"
            },
            "currentElement": {
              "lineCoverage": [
                4,
                11
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$15": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$55": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$50": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$51": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Parser": {
          "methodCoverageMap": {
            "settings": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
            },
            "htmlParser": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Parser;"
            },
            "parse": {
              "lineCoverage": [
                4,
                12
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;"
            },
            "getErrors": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
            }
          }
        },
        "org.jsoup.nodes.Entities$CoreCharset": {
          "methodCoverageMap": {
            "byName": {
              "lineCoverage": [
                4,
                0,
                4,
                2,
                0
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$CoreCharset;"
            }
          }
        },
        "org.jsoup.nodes.Element": {
          "methodCoverageMap": {
            "nodeName": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "ensureChildNodes": {
              "lineCoverage": [
                4,
                7,
                0,
                3
              ],
              "methodDescriptor": "()Ljava/util/List;"
            },
            "appendChild": {
              "lineCoverage": [
                2,
                0,
                0,
                3,
                3,
                5,
                7,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;"
            },
            "parent": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "isBlock": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Z"
            },
            "outerHtmlTail": {
              "lineCoverage": [
                8,
                9,
                2,
                0,
                5,
                9,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "childElementsList": {
              "lineCoverage": [
                3,
                2,
                0,
                0,
                3,
                4,
                5,
                0,
                7,
                6,
                3,
                5,
                0,
                6,
                0,
                2
              ],
              "methodDescriptor": "()Ljava/util/List;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V"
            },
            "isInlineable": {
              "lineCoverage": [
                6,
                4,
                7,
                2,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "hasText": {
              "lineCoverage": [
                11,
                3,
                0,
                0,
                0,
                3,
                3,
                3,
                0,
                0,
                1,
                2
              ],
              "methodDescriptor": "()Z"
            },
            "isFormatAsBlock": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "nodelistChanged": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "doSetBaseUri": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "getAllElements": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/select/Elements;"
            },
            "outerHtmlHead": {
              "lineCoverage": [
                11,
                3,
                4,
                6,
                0,
                0,
                0,
                0,
                7,
                8,
                0,
                0,
                8,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "normalName": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "root": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "attributes": {
              "lineCoverage": [
                3,
                5,
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Attributes;"
            },
            "childNodeSize": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()I"
            },
            "tag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Tag;"
            },
            "child": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(I)Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$12": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$13": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$10": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$11": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$67": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$63": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Node$OuterHtmlVisitor": {
          "methodCoverageMap": {
            "head": {
              "lineCoverage": [
                7,
                0,
                0,
                1,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "tail": {
              "lineCoverage": [
                5,
                0,
                7,
                0,
                0,
                1,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$64": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$65": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$66": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Token": {
          "methodCoverageMap": {
            "asStartTag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$StartTag;"
            },
            "isComment": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "asCharacter": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Character;"
            },
            "isStartTag": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "()Z"
            },
            "isCharacter": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "()Z"
            },
            "asEndTag": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$EndTag;"
            },
            "reset": {
              "lineCoverage": [
                2,
                6,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/StringBuilder;)V"
            },
            "isEndTag": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "isDoctype": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Z"
            },
            "isCData": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$60": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$61": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$62": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Tag": {
          "methodCoverageMap": {
            "formatAsBlock": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "getName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "isBlock": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "normalName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "isEmpty": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "isInline": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                0,
                2,
                3,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "isFormListed": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "isSelfClosing": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "()Z"
            },
            "register": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tag;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Character": {
          "methodCoverageMap": {
            "data": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;"
            },
            "reset": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "getData": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.parser.Token$EndTag": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.nodes.Document": {
          "methodCoverageMap": {
            "parser": {
              "lineCoverage": [
                3,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Parser;)Lorg/jsoup/nodes/Document;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                6,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "body": {
              "lineCoverage": [
                3,
                11,
                10,
                2,
                1,
                0
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "outerHtml": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "htmlEl": {
              "lineCoverage": [
                11,
                5,
                2,
                0,
                0
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            }
          }
        },
        "org.jsoup.nodes.Entities": {
          "methodCoverageMap": {
            "load": {
              "lineCoverage": [
                5,
                5,
                5,
                5,
                0,
                2,
                5,
                0,
                3,
                0,
                0,
                4,
                2,
                6,
                3,
                2,
                0,
                3,
                6,
                3,
                0,
                2,
                0,
                4,
                4,
                2,
                0,
                5,
                5,
                5,
                5,
                0,
                3,
                19,
                0,
                1,
                1,
                0,
                7,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Entities$EscapeMode;Ljava/lang/String;I)V"
            },
            "canEncode": {
              "lineCoverage": [
                5,
                0,
                0,
                0,
                2,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Entities$CoreCharset;CLjava/nio/charset/CharsetEncoder;)Z"
            },
            "escape": {
              "lineCoverage": [
                2,
                2,
                3,
                3,
                3,
                3,
                0,
                0,
                11,
                4,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                0,
                2,
                0,
                4,
                1,
                0,
                3,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                5,
                0,
                0,
                0,
                1,
                6,
                4,
                5,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilder": {
          "methodCoverageMap": {
            "reconstructFormattingElements": {
              "lineCoverage": [
                3,
                2,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "()V"
            },
            "initialiseParse": {
              "lineCoverage": [
                5,
                0,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                5,
                5,
                5,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/io/Reader;Ljava/lang/String;Lorg/jsoup/parser/Parser;)V"
            },
            "framesetOk": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "setHeadElement": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;)V"
            },
            "insertNode": {
              "lineCoverage": [
                4,
                6,
                3,
                0,
                0,
                5,
                0,
                0,
                8,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "insertStartTag": {
              "lineCoverage": [
                9,
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/nodes/Element;"
            },
            "insert": {
              "lineCoverage": [
                3,
                2,
                0,
                3,
                3,
                0,
                3,
                0,
                4,
                0,
                0,
                5,
                4,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token$Character;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                9
              ],
              "methodDescriptor": "()V"
            },
            "inScope": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
            },
            "transition": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/HtmlTreeBuilderState;)V"
            },
            "inButtonScope": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "pop": {
              "lineCoverage": [
                4,
                8
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "lastFormattingElement": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Element;"
            },
            "isContentForTagData": {
              "lineCoverage": [
                10
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "inSpecificScope": {
              "lineCoverage": [
                6,
                5,
                0,
                0,
                7,
                7,
                4,
                0,
                4,
                2,
                6,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z"
            },
            "isFosterInserts": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "defaultSettings": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseSettings;"
            }
          }
        },
        "org.jsoup.select.Evaluator$AllElements": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            },
            "matches": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z"
            }
          }
        },
        "org.jsoup.nodes.TextNode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.ParseErrorList": {
          "methodCoverageMap": {
            "noTracking": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/ParseErrorList;"
            }
          }
        },
        "org.jsoup.select.Collector": {
          "methodCoverageMap": {
            "collect": {
              "lineCoverage": [
                4,
                8,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/select/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;"
            }
          }
        },
        "org.jsoup.select.Collector$Accumulator": {
          "methodCoverageMap": {
            "head": {
              "lineCoverage": [
                3,
                3,
                7,
                5,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "tail": {
              "lineCoverage": [
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;I)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;Lorg/jsoup/select/Elements;Lorg/jsoup/select/Evaluator;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Tag": {
          "methodCoverageMap": {
            "newAttribute": {
              "lineCoverage": [
                3,
                5,
                0,
                3,
                0,
                5,
                4,
                0,
                3,
                0,
                3,
                0,
                0,
                2,
                0,
                7,
                0,
                0,
                3,
                3,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "normalName": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "hasAttributes": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "name": {
              "lineCoverage": [
                3,
                4,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;"
            },
            "reset": {
              "lineCoverage": [
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                5,
                0,
                3,
                3,
                4
              ],
              "methodDescriptor": "()V"
            },
            "finaliseTag": {
              "lineCoverage": [
                3,
                2,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "isSelfClosing": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.Token$Doctype": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                3,
                5,
                5,
                3,
                0,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.CharacterReader": {
          "methodCoverageMap": {
            "isEmptyNoBufferUp": {
              "lineCoverage": [
                9
              ],
              "methodDescriptor": "()Z"
            },
            "consumeToAnySorted": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                0,
                3,
                6,
                1,
                2,
                0,
                3,
                15
              ],
              "methodDescriptor": "([C)Ljava/lang/String;"
            },
            "consumeData": {
              "lineCoverage": [
                3,
                2,
                3,
                3,
                0,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "isEmpty": {
              "lineCoverage": [
                2,
                9
              ],
              "methodDescriptor": "()Z"
            },
            "consume": {
              "lineCoverage": [
                2,
                9,
                6,
                2
              ],
              "methodDescriptor": "()C"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                8,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "advance": {
              "lineCoverage": [
                6,
                1
              ],
              "methodDescriptor": "()V"
            },
            "current": {
              "lineCoverage": [
                2,
                11
              ],
              "methodDescriptor": "()C"
            },
            "consumeToAny": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                3,
                0,
                0,
                3,
                7,
                7,
                1,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "([C)Ljava/lang/String;"
            },
            "cacheString": {
              "lineCoverage": [
                3,
                7,
                3,
                0,
                0,
                0,
                4,
                2,
                7,
                9,
                0,
                0,
                0,
                4,
                4,
                0,
                2,
                7,
                5,
                0,
                6,
                2,
                0,
                7,
                4,
                0,
                0,
                2
              ],
              "methodDescriptor": "([C[Ljava/lang/String;II)Ljava/lang/String;"
            },
            "consumeTagName": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                3,
                0,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                2,
                0,
                0,
                3,
                14
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "bufferUp": {
              "lineCoverage": [
                8,
                1,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                3,
                2,
                0,
                0,
                0,
                6,
                4,
                2,
                3,
                12,
                3,
                3,
                2,
                1,
                4,
                1,
                3,
                2,
                8,
                3,
                6,
                3,
                4,
                0,
                6,
                0,
                0,
                0,
                1,
                1
              ],
              "methodDescriptor": "()V"
            },
            "close": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                0,
                3,
                3,
                3,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "unconsume": {
              "lineCoverage": [
                4,
                0,
                0,
                6,
                1
              ],
              "methodDescriptor": "()V"
            },
            "matchesLetter": {
              "lineCoverage": [
                3,
                0,
                6,
                15
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$23": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.select.Evaluator$Tag": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$21": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$22": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$20": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.StringUtil": {
          "methodCoverageMap": {
            "padding": {
              "lineCoverage": [
                2,
                0,
                0,
                4,
                4,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "(I)Ljava/lang/String;"
            },
            "releaseBuilder": {
              "lineCoverage": [
                2,
                3,
                0,
                4,
                0,
                0,
                6,
                0,
                4,
                4,
                0,
                4,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Ljava/lang/StringBuilder;)Ljava/lang/String;"
            },
            "borrowBuilder": {
              "lineCoverage": [
                4,
                10,
                0,
                2
              ],
              "methodDescriptor": "()Ljava/lang/StringBuilder;"
            },
            "isBlank": {
              "lineCoverage": [
                5,
                0,
                0,
                3,
                5,
                5,
                2,
                0,
                0
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "isWhitespace": {
              "lineCoverage": [
                17
              ],
              "methodDescriptor": "(I)Z"
            },
            "inSorted": {
              "lineCoverage": [
                8
              ],
              "methodDescriptor": "(Ljava/lang/String;[Ljava/lang/String;)Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$12": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$2": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$13": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attributes$1": {
          "methodCoverageMap": {
            "next": {
              "lineCoverage": [
                18,
                6,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Attribute;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$1": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                0,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                5,
                1,
                0,
                3,
                3,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$14": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$15": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$10": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                4,
                0,
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.Token$StartTag": {
          "methodCoverageMap": {
            "reset": {
              "lineCoverage": [
                3,
                3,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token$Tag;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Token$EOF": {
          "methodCoverageMap": {
            "reset": {
              "lineCoverage": [
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.Tokeniser": {
          "methodCoverageMap": {
            "emitTagPending": {
              "lineCoverage": [
                3,
                4,
                1
              ],
              "methodDescriptor": "()V"
            },
            "read": {
              "lineCoverage": [
                3,
                7,
                0,
                0,
                0,
                3,
                3,
                0,
                0,
                0,
                0,
                3,
                6,
                3,
                2,
                0,
                3,
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/parser/Token;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                0,
                3,
                3,
                6,
                6,
                0,
                0,
                5,
                5,
                5,
                5,
                5,
                0,
                0,
                2,
                3,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V"
            },
            "advanceTransition": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
            },
            "transition": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/TokeniserState;)V"
            },
            "createTagPending": {
              "lineCoverage": [
                8,
                3
              ],
              "methodDescriptor": "(Z)Lorg/jsoup/parser/Token$Tag;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$11": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$9": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$8": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$7": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$6": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.LeafNode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$5": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$4": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$3": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.NodeUtils": {
          "methodCoverageMap": {
            "outputSettings": {
              "lineCoverage": [
                3,
                6
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Document$OutputSettings;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$16": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$17": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$18": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$19": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$23": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$24": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$25": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$26": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$20": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$21": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$22": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.ParseSettings": {
          "methodCoverageMap": {
            "normalizeTag": {
              "lineCoverage": [
                3,
                3,
                3,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "preserveAttributeCase": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Z"
            },
            "normalizeAttributes": {
              "lineCoverage": [
                5,
                2,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Attributes;)Lorg/jsoup/nodes/Attributes;"
            }
          }
        },
        "org.jsoup.nodes.Node": {
          "methodCoverageMap": {
            "setParentNode": {
              "lineCoverage": [
                2,
                3,
                0,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "setSiblingIndex": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(I)V"
            },
            "indent": {
              "lineCoverage": [
                10,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "nextSibling": {
              "lineCoverage": [
                3,
                2,
                0,
                4,
                5,
                4,
                5,
                0,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "parentNode": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                1
              ],
              "methodDescriptor": "()V"
            },
            "outerHtml": {
              "lineCoverage": [
                8,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;)V"
            },
            "childNode": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(I)Lorg/jsoup/nodes/Node;"
            },
            "nodelistChanged": {
              "lineCoverage": [
                1
              ],
              "methodDescriptor": "()V"
            },
            "setBaseUri": {
              "lineCoverage": [
                2,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            },
            "root": {
              "lineCoverage": [
                2,
                3,
                4,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "previousSibling": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                0,
                2
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Node;"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "ownerDocument": {
              "lineCoverage": [
                3,
                7
              ],
              "methodDescriptor": "()Lorg/jsoup/nodes/Document;"
            },
            "reparentChild": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Node;)V"
            },
            "hasParent": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$27": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$28": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$29": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$34": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                2,
                3,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attributes": {
          "methodCoverageMap": {
            "add": {
              "lineCoverage": [
                6,
                6,
                6,
                6,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attributes;"
            },
            "checkCapacity": {
              "lineCoverage": [
                7,
                4,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "methodDescriptor": "(I)V"
            },
            "deduplicate": {
              "lineCoverage": [
                3,
                0,
                3,
                2,
                9,
                9,
                5,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/ParseSettings;)I"
            },
            "isEmpty": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "()Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                5
              ],
              "methodDescriptor": "()V"
            },
            "iterator": {
              "lineCoverage": [
                5
              ],
              "methodDescriptor": "()Ljava/util/Iterator;"
            },
            "checkNotNull": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "hashCode": {
              "lineCoverage": [
                3,
                8,
                8,
                2
              ],
              "methodDescriptor": "()I"
            },
            "indexOfKey": {
              "lineCoverage": [
                2,
                6,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Ljava/lang/String;)I"
            },
            "isInternalKey": {
              "lineCoverage": [
                13
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "normalize": {
              "lineCoverage": [
                8,
                9,
                0,
                1
              ],
              "methodDescriptor": "()V"
            },
            "html": {
              "lineCoverage": [
                3,
                7,
                7,
                0,
                0,
                0,
                5,
                5,
                6,
                0,
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "internalKey": {
              "lineCoverage": [
                9
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$35": {
          "methodCoverageMap": {
            "read": {
              "lineCoverage": [
                4,
                4,
                0,
                3,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                3,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$36": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$37": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$30": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$31": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$32": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$33": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Entities$EscapeMode": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                4,
                4,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;ILjava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Document$OutputSettings": {
          "methodCoverageMap": {
            "prepareEncoder": {
              "lineCoverage": [
                4,
                4,
                6,
                2
              ],
              "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                5,
                0,
                0,
                3,
                3,
                3,
                3,
                0,
                3
              ],
              "methodDescriptor": "()V"
            },
            "encoder": {
              "lineCoverage": [
                5,
                5
              ],
              "methodDescriptor": "()Ljava/nio/charset/CharsetEncoder;"
            }
          }
        },
        "org.jsoup.select.Evaluator": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$38": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$39": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.Normalizer": {
          "methodCoverageMap": {
            "lowerCase": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$45": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$46": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.internal.StringUtil$1": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()V"
            },
            "initialValue": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/util/Stack;"
            }
          }
        },
        "org.jsoup.helper.Validate": {
          "methodCoverageMap": {
            "isTrue": {
              "lineCoverage": [
                2,
                0,
                1
              ],
              "methodDescriptor": "(ZLjava/lang/String;)V"
            },
            "notNull": {
              "lineCoverage": [
                2,
                0,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Object;Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$47": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$48": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$41": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$42": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$43": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$44": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$40": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$2": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                0,
                3,
                0,
                3,
                0,
                9,
                0,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                5,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                3,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$1": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                4,
                0,
                0
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$4": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                0,
                0,
                6,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                4,
                0,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                4,
                0,
                4,
                0,
                4,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                5,
                0,
                0,
                0,
                3,
                3,
                4,
                3,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/TreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$3": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                0,
                9,
                0,
                9,
                5,
                3,
                3,
                4,
                0,
                0,
                3,
                0,
                0,
                0,
                4,
                4,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Attribute": {
          "methodCoverageMap": {
            "getKey": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "getValue": {
              "lineCoverage": [
                4
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "hasDeclaredValue": {
              "lineCoverage": [
                7
              ],
              "methodDescriptor": "()Z"
            },
            "isBooleanAttribute": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;)Z"
            },
            "hashCode": {
              "lineCoverage": [
                8,
                13,
                2
              ],
              "methodDescriptor": "()I"
            },
            "setValue": {
              "lineCoverage": [
                3,
                3,
                0,
                0,
                0,
                0,
                0,
                3,
                3
              ],
              "methodDescriptor": "(Ljava/lang/String;)Ljava/lang/String;"
            },
            "html": {
              "lineCoverage": [
                7,
                1
              ],
              "methodDescriptor": "(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V"
            },
            "toString": {
              "lineCoverage": [
                3
              ],
              "methodDescriptor": "()Ljava/lang/String;"
            },
            "shouldCollapseAttribute": {
              "lineCoverage": [
                2,
                7,
                12
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                2,
                2,
                3,
                2,
                3,
                3,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V"
            },
            "setKey": {
              "lineCoverage": [
                2,
                3,
                2,
                3,
                0,
                0,
                0,
                0,
                3,
                1
              ],
              "methodDescriptor": "(Ljava/lang/String;)V"
            }
          }
        },
        "org.jsoup.parser.Token$Comment": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                5,
                0,
                3,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                3,
                3,
                1
              ],
              "methodDescriptor": "()V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$9": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$6": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                3,
                0,
                3,
                0,
                3,
                0,
                3,
                3,
                3,
                4,
                0,
                4,
                4,
                3,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                5,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            },
            "anythingElse": {
              "lineCoverage": [
                4,
                3,
                4
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            }
          }
        },
        "org.jsoup.parser.TokeniserState$49": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$5": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$8": {
          "methodCoverageMap": {
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        },
        "org.jsoup.nodes.Element$NodeList": {
          "methodCoverageMap": {
            "onContentsChanged": {
              "lineCoverage": [
                3,
                1
              ],
              "methodDescriptor": "()V"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                3,
                3,
                1
              ],
              "methodDescriptor": "(Lorg/jsoup/nodes/Element;I)V"
            }
          }
        },
        "org.jsoup.parser.HtmlTreeBuilderState$7": {
          "methodCoverageMap": {
            "process": {
              "lineCoverage": [
                6,
                0,
                3,
                5,
                0,
                0,
                0,
                6,
                0,
                0,
                0,
                2,
                3,
                3,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "inBodyStartTag": {
              "lineCoverage": [
                3,
                3,
                0,
                0,
                0,
                8,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                5,
                4,
                0,
                4,
                0,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                4,
                0,
                4,
                0,
                0,
                0,
                2,
                4,
                0,
                0,
                2
              ],
              "methodDescriptor": "(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z"
            },
            "\u003cinit\u003e": {
              "lineCoverage": [
                6
              ],
              "methodDescriptor": "(Ljava/lang/String;I)V"
            }
          }
        }
      }
    }
  }
}